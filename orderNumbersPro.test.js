const { quickSort, bubbleSort } = require('./orderNumbersPro');
const orderNumbers = require('./orderNumbers');

describe('orderNumbersPro by Quicksort', () => {
          const numbers = [832, 758, 184, 940, 552, 381, 318, 191, 922, 594, 288, 409, 862, 653, 334, 224, 107, 738, 469, 347, 83, 535, 209, 614, 737, 312, 41, 471, 904, 451, 177, 384, 772, 200, 614, 727, 989, 150, 611, 777, 619, 141, 962, 347, 268, 48, 981, 16, 281, 592, 206, 330, 139, 819, 558, 231, 409, 224, 621, 77, 307, 328, 90, 110, 540, 905, 367, 363, 169, 109, 23, 77, 570, 285, 471, 860, 421, 540, 597, 451, 269, 681, 456, 104, 265, 573, 842, 53, 357, 343, 12, 509, 278, 648, 870, 709, 682, 935, 403, 520]

          test('Ordenar array de números', () => {
                    const expected = [12, 16, 23, 41, 48, 53, 77, 77, 83, 90, 104, 107, 109, 110, 139, 141, 150, 169, 177, 184, 191, 200, 206, 209, 224, 224, 231, 265, 268, 269, 278, 281, 285, 288, 307, 312, 318, 328, 330, 334, 343, 347, 347, 357, 363, 367, 381, 384, 403, 409, 409, 421, 451, 451, 456, 469, 471, 471, 509, 520, 535, 540, 540, 552, 558, 570, 573, 592, 594, 597, 611, 614, 614, 619, 621, 648, 653, 681, 682, 709, 727, 737, 738, 758, 772, 777, 819, 832, 842, 860, 862, 870, 904, 905, 922, 935, 940, 962, 981, 989];
                    const result = quickSort(numbers);
                    expect(expected).toStrictEqual(result);
          });

})

describe('orderNumbersPro by bubbleSort', () => {
          const numbers = [832, 758, 184, 940, 552, 381, 318, 191, 922, 594, 288, 409, 862, 653, 334, 224, 107, 738, 469, 347, 83, 535, 209, 614, 737, 312, 41, 471, 904, 451, 177, 384, 772, 200, 614, 727, 989, 150, 611, 777, 619, 141, 962, 347, 268, 48, 981, 16, 281, 592, 206, 330, 139, 819, 558, 231, 409, 224, 621, 77, 307, 328, 90, 110, 540, 905, 367, 363, 169, 109, 23, 77, 570, 285, 471, 860, 421, 540, 597, 451, 269, 681, 456, 104, 265, 573, 842, 53, 357, 343, 12, 509, 278, 648, 870, 709, 682, 935, 403, 520]

          test('Ordenar array de números', () => {
                    const expected = [12, 16, 23, 41, 48, 53, 77, 77, 83, 90, 104, 107, 109, 110, 139, 141, 150, 169, 177, 184, 191, 200, 206, 209, 224, 224, 231, 265, 268, 269, 278, 281, 285, 288, 307, 312, 318, 328, 330, 334, 343, 347, 347, 357, 363, 367, 381, 384, 403, 409, 409, 421, 451, 451, 456, 469, 471, 471, 509, 520, 535, 540, 540, 552, 558, 570, 573, 592, 594, 597, 611, 614, 614, 619, 621, 648, 653, 681, 682, 709, 727, 737, 738, 758, 772, 777, 819, 832, 842, 860, 862, 870, 904, 905, 922, 935, 940, 962, 981, 989];
                    const result = bubbleSort(numbers);
                    expect(expected).toStrictEqual(result);
          });

})

describe('orderNumbers', () => {
          const numbers = [832, 758, 184, 940, 552, 381, 318, 191, 922, 594, 288, 409, 862, 653, 334, 224, 107, 738, 469, 347, 83, 535, 209, 614, 737, 312, 41, 471, 904, 451, 177, 384, 772, 200, 614, 727, 989, 150, 611, 777, 619, 141, 962, 347, 268, 48, 981, 16, 281, 592, 206, 330, 139, 819, 558, 231, 409, 224, 621, 77, 307, 328, 90, 110, 540, 905, 367, 363, 169, 109, 23, 77, 570, 285, 471, 860, 421, 540, 597, 451, 269, 681, 456, 104, 265, 573, 842, 53, 357, 343, 12, 509, 278, 648, 870, 709, 682, 935, 403, 520]

          test('Ordenar array de números', () => {
                    const expected = [12, 16, 23, 41, 48, 53, 77, 77, 83, 90, 104, 107, 109, 110, 139, 141, 150, 169, 177, 184, 191, 200, 206, 209, 224, 224, 231, 265, 268, 269, 278, 281, 285, 288, 307, 312, 318, 328, 330, 334, 343, 347, 347, 357, 363, 367, 381, 384, 403, 409, 409, 421, 451, 451, 456, 469, 471, 471, 509, 520, 535, 540, 540, 552, 558, 570, 573, 592, 594, 597, 611, 614, 614, 619, 621, 648, 653, 681, 682, 709, 727, 737, 738, 758, 772, 777, 819, 832, 842, 860, 862, 870, 904, 905, 922, 935, 940, 962, 981, 989];
                    const result = orderNumbers(numbers);
                    expect(expected).toStrictEqual(result);
          });

})